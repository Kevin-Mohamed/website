[% 
      wildtype_length = 0;
      mutant_length = 0;

WRAPPER $field_block title="Variation Type" key='variation_type';
      fields.variation_type.data.general_class.join('; ');
      IF fields.variation_type.data.physical_class; ': '; END;
      fields.variation_type.data.physical_class FILTER lower;
END;


WRAPPER $field_block title="Sequencing Status" key="sequencing_status";
         fields.sequencing_status.data;
END;

# Nucleotide change: one or more possible changes for this allele;
WRAPPER $field_block title="Nucleotide Change" key="nucleotide_change";

    FOREACH change IN fields.nucleotide_change.data;
          IF fields.nucleotide_change.data.size > 1; change.type _ ': '; END;
          label = [];
          # Let's only display deletions/insertions < 100 bp;
           IF change.wildtype && (change.wildtype.length < 100);
                  change.wildtype;
                  '/';
                  label.push(change.wildtype_label);
           ELSIF (change.wildtype.length > 0) ;
                  change.wildtype.length _ ' bp deletion';
           END;

           IF change.mutant && (change.mutant.length < 100);
                  change.mutant;
                  label.push(change.mutant_label);
                  
           ELSIF (change.mutant.length > 0);      
                  change.mutant.length _ ' bp insertion';
           ELSIF !change.wildtype;
              '(sequence unknown / unlisted)';
           END;
           IF label.size > 0;
              ' (' _ label.join('/') _ ')' _ '<br />';
           END;
        wildtype_length = wildtype_length + change.wildtype.length;
        mutant_length = mutant_length + change.mutant.length;
       END;
   END;

   WRAPPER $field_block title="Protein Change" key="amino_acid_change";
       FOREACH change IN fields.amino_acid_change.data;
#            tag2link(change.transcript) _ ' (' _ change.amino_acid_change _ ')<br/>';
            tag2link(change.transcript) _ ' (wildtype)<br/>';
#            tag2link(change.transcript) _ ' (' _ change.amino_acid_change _ ')<br/>';

	# Display the conceptual translation.
	feature_type = 'Predicted_CDS';

          IF fields.features_affected.data.$feature_type;
           FOREACH feature IN fields.features_affected.data.$feature_type.sort;
    	      NEXT UNLESS feature.item.id == change.transcript.id;
              IF feature.wildtype_conceptual_translation;
	      # This won't actually result in download option for the conceptual translation.
              # tag2link(feature.item) _ ' (mutant' _ change.amino_acid_change _ ')<br/>';
                 WRAPPER toggle title=change.transcript.id _ ' conceptual translation';        
                    '<div>';                   
                         '<div class="sequence-container">';
                              '<pre>> wildtype<br />' _ feature.wildtype_conceptual_translation _ '</pre>';
                              '<pre>> wildtype<br />' _ feature.mutant_conceptual_translation _ '</pre>';
                         '</div>';                                       
                 '</div>';
                  END; # of feature loop
              END;
	    END;
	  END;
       END;
   END;

   WRAPPER $field_block title="Flanking PCR Products" key="flanking_pcr_products";
       tags2link(fields.flanking_pcr_products.data, ', ');
   END;

   
   # Conditionally display some information if this is a polymorphism


       WRAPPER $field_block title="Polymorphism type" key="polymorphism_type";
                fields.polymorphism_type.data;
       END;

       WRAPPER $field_block title="Reference strain" key ="reference_strain";
                tag2link(fields.reference_strain.data);
       END;

       WRAPPER $field_block title="Polymorphism status" key ="polymorphism_status";
                fields.polymorphism_status.data;
       END;

       WRAPPER $field_block title="Assays" key="polymorphism_assays";
           FOREACH a IN fields.polymorphism_assays.data.keys;
               '<h5>';
           assay = fields.polymorphism_assays.data.$a;
		   IF assay.assay_type.match('rflp');
	   	      'RFLP assay';
		   ELSE;
		      'Sequence-only assay';
		   END;
	       '</h5>';
   	       '<table>';
			 '<tr><td>Verified PCR product:</td><td>' _ tag2link(assay.pcr_product) _ '</td></tr>';
	    		 '<tr><td>Left Oligo:</td><td class="sequence-container">' _ assay.pcr_product.left_oligo _ '</td></tr>';
	    		 '<tr><td>Right Oligo:</td><td class="sequence-container">' _ assay.pcr_product.right_oligo _ '</td></tr>';
			 IF assay.pcr_conditions.dna; '<tr><td>PCR conditions:</td><td>' _ assay.pcr_product.pcr_conditions _ '</td></tr>'; END;
			 IF assay.pcr_product.dna; '<tr><td class="sequence-container">Sequence:</td><td>' _ assay.pcr_product.dna _ '</td></tr>'; END;
	    '</table>';
           IF assay.assay_type.match('rflp');
	    '<table>';
	    	    '<tr><th>Source</th><th>Enzyme</th><th>Resulting Bands</th></tr>';
		    '<tr><td>Reference strain digest</td><td>' _ assay.reference_strain_digest _ '</td>';
		         '<td>' _ assay.reference_strain_bands _ '</td>';
 	 	    '<tr>';
		    '<tr><td>Polymorphic strain digest</td>';
		         '<td>' _ assay.polymorphic_strain_digest _ '</td><td>' _ assay.polymorphic_strain_bands _ '</td>';
		    '<tr>';
	    '</table>';
           END;
'<br />';
          END;
        END;

   # Mutation context
   WRAPPER $field_block title="Sequence" key="context";
      '<p class="caveat-emptor">Note: sequence is reported on the (+) strand.<br />';

      '<span class="sequence-container" style="background-color:#FF8080">red</span> = mutation <br />';
      '<span class="sequence-container" style="background-color:yellow">yellow</span> = flanking sequence <br /></p>';

      wildtype_length = (wildtype_length > 4000) ? 0 : 1;
      mutant_length = (mutant_length > 4000) ? 0 : 1;

      wildtype.sequence = fields.context.data.wildtype_full;
      wildtype.header = "wild type, with 250 bp flanks";
      sequence(wildtype, '', wildtype_length);
      mutant.sequence = fields.context.data.mutant_full;
      mutant.header =  markup_var(object.name.data.label, 1) _" with 250 bp flanks";
      sequence(mutant, '', mutant_length);

   END;

  WRAPPER $field_block title="CGH Deleted Probes" key="cgh_deleted_probes";
      '<div class="sequence-container">';
        "5' flank -- " _ fields.cgh_deleted_probes.data.left_flank _ " " _ fields.cgh_deleted_probes.data.right_flank _ "-- 3' flank";
    '</div>';
  END;

  WRAPPER $field_block title="Deletion Verification" key="deletion_verification";
    cell_content(fields.deletion_verification.data);
  END;

   WRAPPER $field_block title="Features Affected" key="features_affected";


        features = fields.features_affected.data;
       IF features.Chromosome; 'Chromosome: ' _  features.Chromosome.0.label _ '<br />'; END;

       IF features.Gene; 'Gene: ' _ tags2link(features.Gene, '<br />', 'genes') _ '<br />'; END;

       FOREACH feature_type IN ['Predicted_CDS', 'Transcript', 'Pseudogene', 'Feature', 'Interactor', 'Clone'];
          NEXT UNLESS fields.features_affected.data.$feature_type;
          t =  pluralize(feature_type.replace('_', ' '), fields.features_affected.data.$feature_type.size) _ ' (' _ fields.features_affected.data.$feature_type.size _ ')';
          WRAPPER toggle title=t;

           FOREACH feature IN fields.features_affected.data.$feature_type.sort;
              '<div>';
              # feature = fields.features_affected.data.$feature_type.$feature_name;
#                IF feature_type == 'Chromosome';
#                     feature.label;
#                ELSE;
#                  tag2link(feature);
#                END;
#               '<br>';
s = '';
               protein_effects = feature.protein_effects;
               IF protein_effects;
                  FOREACH effect_type IN protein_effects.sort;
                     effect = protein_effects.$effect_type;
                     s = s _ 'Effect on protein: ' _ effect_type.replace('_', ' ');
                      s = s _ effect.subtype || effect.position || '';
              s = s _ effect.description _ '<br />';
                   END;
               END;


               location_effects = feature.location_effects;

                  IF location_effects;
                      FOREACH effect_type IN location_effects.sort;
                          effect = location_effects.$effect_type;
                      s = s _ 'Affects: ' _ effect_type.replace('_', ' ') _ '<br />';
                      END;
                  END;
feature.affects = s;

		# Displayed above in Protein Change
#                 IF feature.wildtype_conceptual_translation;
#                'Conceptual Translations: ' _ item;
#                      '<div class="sequence-container">';
#                           '<pre>> wildtype<br />' _ feature.wildtype_conceptual_translation _ '</pre>';
#                           '<pre>> wildtype<br />' _ feature.mutant_conceptual_translation _ '</pre>';
#                      '</div>';                 
#                 END;
             '</div>';
              END; # of feature loop

       build_data_table(order=['item', 'affects', 'abs_start','abs_stop','fstart','fstop','start','stop'],
                         columns={  item    => 'item',
                                    affects => 'Affects',
                                    abs_start    => 'absolute start',
                                    abs_stop    => 'absolute stop',
                                    fstart    => 'feature start',
                                    fstop    => 'feature stop',
                                    start    => 'start relative to feature',
                                    stop    => 'stop relative to feature'
                                 },
                         passed_data=fields.features_affected.data.$feature_type,
                         key=feature_type);

            END;


       END; # of feature type loop; 
   END; # of Features Affected WRAPPER;

   WRAPPER $field_block title="Detection Method" key="detection_method";
      fields.detection_method.data;
   END;

   WRAPPER $field_block title="Affects Splice Site" key="" disabled=!(fields.affects_splice_site.data.donor || fields.affects_splice_site.data.acceptor);
      IF fields.affects_splice_site.data.acceptor;
         WRAPPER $field_block title="Acceptor" key='';
            fields.affects_splice_site.data.acceptor;
         END;
     END;
     IF fields.affects_splice_site.data.donor;
        WRAPPER $field_block title="Donor" key='';
          fields.affects_splice_site.data.donor;
        END;
     END;
   END;

   WRAPPER $field_block title="Causes Frameshift" key="causes_frameshift";
      fields.causes_frameshift.data;
   END;

%]